{"version":3,"sources":["components/BrittanyCard.js","components/TechStack.js","components/AboutMe.js","components/Resume.js","components/ProjectCard.js","components/mdyml.js","components/Projects.js","components/Experiences.js","components/Papers.js","components/Contact.js","App.js","serviceWorker.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","cardIndex","marginRight","cardTitle","cardContents","CardIndex","props","classes","Typography","variant","className","value","padStart","CardTitle","style","fontWeight","BritannyCard","Container","maxWidth","undefined","Box","mb","Grid","container","alignItems","index","title","caption","Divider","light","my","children","Skeleton","height","TechStack","columnLength","values","Array","map","_","i","key","List","filter","v","ListItem","padding","paddingLeft","paddingRight","paragraph","marginBottom","desc","color","marginLeft","display","link","blockquote","fontStyle","AboutMe","React","useState","setValue","descList","setTimeout","length","Fade","in","timeout","component","align","Link","href","target","borderLeft","margin","TimelineEvent","year","start","TimelineDivider","TimelineItem","TimelineOppositeContent","flex","width","month","TimelineSeparator","TimelineDot","end","TimelineConnector","TimelineContent","marginTop","Resume","Fragment","Timeline","root","tags","flexWrap","spacing","ProjectCard","isExpanded","setExpanded","Accordion","expanded","onChange","event","_isExpanded","AccordionSummary","expandIcon","aria-controls","id","subtitle","captions","Chip","size","label","AccordionDetails","px","projectDetails","MdymlData","this","metadata","body","parseMdyml","text","split","section","lines","hs","he","count","trim","bodyText","slice","join","Yaml","load","source","renderers","parseItem","parseList","image","alt","float","mr","src","path","resolve","process","ProjectContents","state","data","fetch","then","response","setState","d","Component","Projects","projects","techList","p","border","PaperContents","Papers","TextWithIcon","Contact","position","bottom","right","flexGrow","menuButton","HideOnScroll","window","trigger","useScrollTrigger","Slide","appear","direction","CardWrapper","MenuDivider","flexItem","orientation","alignSelf","App","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","Avatar","Button","Boolean","location","hostname","match","createMuiTheme","typography","fontSize","fontFamily","palette","type","background","default","paper","primary","main","secondary","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f2178c87.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Grid, makeStyles, Divider, Typography, Box, Container } from \"@material-ui/core\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardIndex: {\r\n    marginRight: \"1rem\"\r\n  },\r\n  cardTitle: {},\r\n  cardContents: {},\r\n}));\r\n\r\nfunction CardIndex(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography variant=\"h6\" className={classes.cardIndex}>\r\n      {(props.value + \".\").padStart(3, \"0\")}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction CardTitle(props) {\r\n  return (\r\n    <Typography variant=\"h3\" style={{fontWeight: \"bold\"}}>\r\n      {props.value}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default function BritannyCard(props) {\r\n    return (\r\n      <Container maxWidth={props.maxWidth === undefined ? \"md\" : props.maxWidth}>\r\n        <Box mb={1}>\r\n          <Grid container alignItems=\"flex-end\">\r\n            <Grid>\r\n              <CardIndex value={props.index} />\r\n            </Grid>\r\n            <Grid>\r\n              <CardTitle value={props.title} />\r\n            </Grid>\r\n            <Typography variant=\"caption\">{props.caption}</Typography>\r\n          </Grid>\r\n        </Box>\r\n        <Divider light></Divider>\r\n        <Box my={1}>\r\n          {props.children !== undefined ? props.children\r\n          : <Skeleton variant=\"rect\" height={400} />\r\n        }\r\n        </Box>\r\n      </Container>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Grid, List, ListItem, Typography } from \"@material-ui/core\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\n\r\nexport default function TechStack(props) {\r\n  const columnLength =\r\n    props.columnLength === undefined ? 3 : props.columnLength;\r\n  return props.values === undefined ? null : (\r\n    <Grid container>\r\n      {[...new Array(columnLength)].map((_, i) => (\r\n        <Grid key={i}>\r\n          <List>\r\n            {props.values\r\n              .filter((_, index) => index % columnLength === i)\r\n              .map((v, i) => (\r\n                <ListItem\r\n                  key={i}\r\n                  style={{\r\n                    padding: \"0.4rem\",\r\n                    paddingLeft: \"0.8rem\",\r\n                    paddingRight: \"0.8rem\",\r\n                  }}\r\n                >\r\n                  <ArrowRightIcon />\r\n                  <Typography variant=\"body2\">{v}</Typography>\r\n                </ListItem>\r\n              ))}\r\n          </List>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Box, Typography, makeStyles, Fade, Link } from \"@material-ui/core\";\r\n\r\nimport TechStack from \"./TechStack\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paragraph: {\r\n    marginBottom: \"0.5rem\",\r\n  },\r\n  desc: {\r\n    color: \"#f3c677\",\r\n    marginLeft: \"0.5rem\",\r\n    marginRight: \"0.5rem\",\r\n    display: \"inline-block\",\r\n  },\r\n  link: {\r\n    color: \"#5bf\",\r\n  },\r\n  blockquote: {\r\n    fontStyle: \"italic\",\r\n  },\r\n}));\r\n\r\nexport default function AboutMe(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const descTransitDelay = 2500;\r\n\r\n  const descList = [\"Programmer\", \"Positive\", \"Creative\", \"Conscientiousness\"];\r\n\r\n  setTimeout(() => {\r\n    if (value === descList.length - 1) {\r\n      setValue(0);\r\n    } else {\r\n      setValue(value + 1);\r\n    }\r\n  }, descTransitDelay);\r\n\r\n  return (\r\n    <Box>\r\n      <Box className={classes.paragraph}>\r\n        <Typography display=\"inline\">안녕하세요.</Typography>\r\n        {descList.map((desc, index) =>\r\n          value === index ? (\r\n            <Fade key={index} in={true} timeout={500}>\r\n              <Box component=\"span\" className={classes.desc}>\r\n                <Typography align=\"right\">{desc}</Typography>\r\n              </Box>\r\n            </Fade>\r\n          ) : null\r\n        )}\r\n        <Typography display=\"inline\">조욱재입니다.</Typography>\r\n      </Box>\r\n\r\n      <Box className={classes.paragraph}>\r\n        <Typography>\r\n          현재{\" \"}\r\n          <Link\r\n            href=\"https://www.suresofttech.com\"\r\n            target=\"_blank\"\r\n            className={classes.link}\r\n          >\r\n            슈어소프트테크\r\n          </Link>\r\n          에서 웹 기반 정적 코드 검증 도구{\" \"}\r\n          <Link\r\n            href=\"https://www.suresofttech.com/ko/html/tool/code_static\"\r\n            target=\"_blank\"\r\n            className={classes.link}\r\n          >\r\n            CodeScroll STATIC\r\n          </Link>\r\n          을 개발하고 있습니다.\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Box className={classes.paragraph}>\r\n        <Box\r\n          borderLeft=\"solid 5px\"\r\n          paddingLeft=\"1rem\"\r\n          margin=\"1rem\"\r\n          className={classes.blockquote}\r\n        >\r\n          <Typography>\r\n            어떤 초대든 사양하지 말고, 낯선 것을 거부하지 마라\r\n          </Typography>\r\n          <Typography>영화 \"비치\"</Typography>\r\n        </Box>\r\n        <Typography>\r\n          개발자로 살아가는데 있어 가장 중요한 요소는 변화를 두려워하지 않는 것,\r\n          스스로 배우려는 자세 그리고 꾸준한 노력이라 생각합니다. 항상 긍정적인\r\n          태도로 좋은 변화를 만들겠습니다.\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Typography>최근 아래 기술을 다루었습니다:</Typography>\r\n      <TechStack\r\n        values={[\"Java\", \"Python\", \"SpringBoot\", \"React\", \"Flask\", \"Docker\"]}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Box, Divider } from \"@material-ui/core\";\r\n\r\nfunction TimelineEvent(props) {\r\n  return (\r\n    <Box>\r\n      {props.year === undefined | props.start ? null : <TimelineDivider />}\r\n      <TimelineItem>\r\n        <TimelineOppositeContent style={{ flex: \"0 1 auto\" }}>\r\n          <Box width=\"50px\">\r\n            <Typography style={{ color: \"#ffd687\" }}>\r\n              {props.year === undefined ? null : props.year}\r\n            </Typography>\r\n            <Typography variant=\"caption\" style={{ color: \"#ffd687\" }}>\r\n              {props.month === undefined ? null : props.month}\r\n            </Typography>\r\n          </Box>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot variant=\"outlined\" color=\"primary\" />\r\n          {props.end ? null : <TimelineConnector />}\r\n        </TimelineSeparator>\r\n        <TimelineContent>{props.children}</TimelineContent>\r\n      </TimelineItem>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction TimelineDivider() {\r\n  return <Divider style={{ marginTop: \"8px\" }} />;\r\n}\r\n\r\nexport default function Resume() {\r\n  return (\r\n    <React.Fragment>\r\n      <Timeline>\r\n        <TimelineEvent year=\"2017\" month=\"Feb\" start={true}>\r\n          <Typography>\r\n            강원대학교 일반대학원 석사과정 졸업 - 전자통신공학 전공\r\n          </Typography>\r\n        </TimelineEvent>\r\n        <TimelineEvent year=\"2016\" month=\"Dec\">\r\n          <Typography>슈어소프트테크 입사</Typography>\r\n        </TimelineEvent>\r\n        <TimelineEvent year=\"2015\" month=\"Mar\">\r\n          <Typography>\r\n            강원대학교 일반대학원 석사과정 입학 - 전자통신공학 전공\r\n          </Typography>\r\n        </TimelineEvent>\r\n        <TimelineEvent month=\"Feb\">\r\n          <Typography>강원대학교 전자통신공학과 학사과정 졸업</Typography>\r\n        </TimelineEvent>\r\n        <TimelineEvent year=\"2012\" month=\"May\">\r\n          <Typography>산업정보통신 연구실(IIC Lab) 입실</Typography>\r\n        </TimelineEvent>\r\n        <TimelineEvent year=\"2011\" month=\"Sep\">\r\n          <Typography>강원대학교 복학 - 전자통신공학 전공</Typography>\r\n        </TimelineEvent>\r\n        <TimelineEvent month=\"Aug\">\r\n          <Typography>육군 병장 만기 전역</Typography>\r\n        </TimelineEvent>\r\n        <TimelineEvent year=\"2009\" month=\"Oct\">\r\n          <Typography>육군 입대</Typography>\r\n        </TimelineEvent>\r\n        <TimelineEvent month=\"Mar\">\r\n          <Typography>강원대학교 전기전자공학부 입학</Typography>\r\n        </TimelineEvent>\r\n        <TimelineEvent month=\"Feb\">\r\n          <Typography>창신고등학교 자연계 졸업</Typography>\r\n        </TimelineEvent>\r\n        <TimelineEvent year=\"....\">\r\n          <Typography>......</Typography>\r\n        </TimelineEvent>\r\n        <TimelineEvent year=\"1991\" month=\"Jan\" end={true}>\r\n          <Typography>창원시 마산합포구에서 태어남</Typography>\r\n        </TimelineEvent>\r\n      </Timeline>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, Typography, Box, Chip, Divider } from \"@material-ui/core\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  title: {\r\n    color: \"#ffd687\",\r\n  },\r\n  tags: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ProjectCard(props) {\r\n  const classes = useStyles();\r\n  let [isExpanded, setExpanded] = React.useState(false);\r\n  const handleChange = (panel) => (event, _isExpanded) => {\r\n    setExpanded(_isExpanded);\r\n  };\r\n\r\n  return (\r\n    <Accordion expanded={isExpanded} onChange={handleChange(true)}>\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1bh-content\"\r\n        id=\"panel1bh-header\"\r\n      >\r\n        <Box>\r\n          <Typography className={classes.title}>{props.title}</Typography>\r\n          <Typography variant=\"subtitle2\">{props.subtitle}</Typography>\r\n          <Typography variant=\"caption\">{props.caption}</Typography>\r\n          {props.captions === undefined\r\n            ? null\r\n            : props.captions.map((v, i) => (\r\n                <Typography variant=\"caption\">\r\n                  {i === 0 ? null : <br />}\r\n                  {v}\r\n                </Typography>\r\n              ))}\r\n          <Box className={classes.tags}>\r\n            {props.tags === undefined | null\r\n              ? null\r\n              : props.tags.map((v, i) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={<Typography variant=\"caption\">{v}</Typography>}\r\n                    color=\"secondary\"\r\n                  />\r\n                ))}\r\n          </Box>\r\n        </Box>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box px={2}>\r\n          {props.children === undefined ? (\r\n            <Skeleton my={0} height={180} />\r\n          ) : (\r\n            <Box className={classes.projectDetails} my={1}>\r\n              {props.children}\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport Yaml from \"js-yaml\";\r\nimport path from \"path\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst SECTION_DIVIDER = \"-----\";\r\nconst METADATA_WRAPPER = \"---\";\r\n\r\nexport class MdymlData {\r\n  constructor(props) {\r\n    this.metadata = props.metadata;\r\n    this.body = props.body;\r\n  }\r\n}\r\n\r\nexport function parseMdyml(text) {\r\n  return parseList(text);\r\n}\r\n\r\nexport function parseList(text) {\r\n  return text.split(SECTION_DIVIDER).map((section) => parseItem(section));\r\n}\r\n\r\nconst renderers = {\r\n  image: (props) => {\r\n    let style = null;\r\n    if (props.alt === \"<\") {\r\n      style = {\r\n        width: \"50%\",\r\n        float: \"left\",\r\n      };\r\n    } else if (props.alt === \">\") {\r\n      style = {\r\n        width: \"50%\",\r\n        float: \"right\",\r\n      };\r\n    } else {\r\n      style = { width: \"100%\" };\r\n    }\r\n\r\n    return (\r\n      <Box mr={5}>\r\n        <img\r\n          alt={props.alt}\r\n          src={path.resolve(process.env.PUBLIC_URL, props.src)}\r\n          style={style}\r\n        />\r\n      </Box>\r\n    );\r\n  },\r\n};\r\n\r\nexport function parseItem(text) {\r\n  // split by line\r\n  const lines = text.split(/\\r?\\n/);\r\n\r\n  // line index of header start\r\n  let hs = 0;\r\n\r\n  // line index of header end\r\n  let he = 0;\r\n\r\n  // count for identifing header and body in all lines of text\r\n  let count = 0;\r\n  for (let i = 0; i < lines.length; i++) {\r\n    if (lines[i].trim() === METADATA_WRAPPER) {\r\n      if (count === 0) {\r\n        // the first divider of the text\r\n        hs = i + 1;\r\n      } else if (count === 1) {\r\n        // the secondary divider of the text\r\n        he = i;\r\n      } else {\r\n        // ignore the more of the divider\r\n        break;\r\n      }\r\n\r\n      count++;\r\n    }\r\n  }\r\n\r\n  // join lines for body\r\n  const bodyText = lines.slice(he + 1, lines.length).join(\"\\n\");\r\n  return new MdymlData({\r\n    metadata: Yaml.load(lines.slice(hs, he).join(\"\\n\")),\r\n    body: <ReactMarkdown source={bodyText} renderers={renderers} />,\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport { parseMdyml } from \"./mdyml\";\r\n\r\nclass ProjectContents extends React.Component {\r\n  state = {\r\n    data: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.src) {\r\n      fetch(this.props.src)\r\n        .then((response) => response.text())\r\n        .then((text) => {\r\n          this.setState({data: parseMdyml(text)})\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box>\r\n        {this.state.data === null\r\n          ? null\r\n          : this.state.data.map((d) => (\r\n              <ProjectCard {...d.metadata}>{d.body}</ProjectCard>\r\n            ))}\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function Projects() {\r\n  return (\r\n    <Box>\r\n      <ProjectContents src={process.env.PUBLIC_URL + \"/projects.md\"} />\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, Box, Divider } from \"@material-ui/core\";\r\nimport ProjectCard from \"./ProjectCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\n\r\nconst projects = [\r\n  <ProjectCard\r\n    isExpanded={true}\r\n    title=\"제 3회 OPRoS 창작 로봇 경진 대회\"\r\n    caption=\"산업통상자원부 주관\"\r\n    techList={[\"\"]}\r\n  >\r\n    <br />\r\n  </ProjectCard>,\r\n  <ProjectCard\r\n  isExpanded={true}\r\n  title=\"제 2회 OPRoS 창작 로봇 경진 대회\"\r\n  caption=\"산업통상자원부 주관\"\r\n  techList={[\"\"]}\r\n>\r\n  <br />\r\n</ProjectCard>,\r\n];\r\n\r\nexport default function Projects() {\r\n  return (\r\n    <Box>\r\n      {projects.map((p, index) => (\r\n        <Box>\r\n          {p}\r\n          <Divider border />\r\n        </Box>\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport { parseMdyml } from \"./mdyml\";\r\n\r\nclass PaperContents extends React.Component {\r\n  state = {\r\n    data: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.src) {\r\n      fetch(this.props.src)\r\n        .then((response) => response.text())\r\n        .then((text) => {\r\n          this.setState({data: parseMdyml(text)})\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box>\r\n        {this.state.data === null\r\n          ? null\r\n          : this.state.data.map((d) => (\r\n              <ProjectCard {...d.metadata}>{d.body}</ProjectCard>\r\n            ))}\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function Papers() {\r\n  return (\r\n    <Box>\r\n      <PaperContents src={process.env.PUBLIC_URL + \"/papers.md\"} />\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport PhoneAndroidIcon from \"@material-ui/icons/PhoneAndroid\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\n\r\nfunction TextWithIcon(props) {\r\n  return (\r\n    <Box display=\"flex\" my={3}>\r\n      {props.children}\r\n      <Typography style={{ marginLeft: 10 }}>{props.text}</Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function Contact() {\r\n  return (\r\n    <Box>\r\n      <Typography>읽어주셔서 감사합니다.</Typography>\r\n      <br />\r\n      <TextWithIcon text=\"010-3711-9275\">\r\n        <PhoneAndroidIcon />\r\n      </TextWithIcon>\r\n      <TextWithIcon text=\"jwj0104@gmail.com\">\r\n        <MailOutlineIcon />\r\n      </TextWithIcon>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport BrittanyCard from \"./components/BrittanyCard\";\r\nimport { Slide, IconButton, Button, Avatar, Divider } from \"@material-ui/core\";\r\nimport AboutMe from \"./components/AboutMe\";\r\nimport Resume from \"./components/Resume\";\r\nimport Projects from \"./components/Projects\";\r\nimport Experiences from \"./components/Experiences\";\r\nimport Papers from \"./components/Papers\";\r\nimport Contact from \"./components/Contact\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    color: \"#5bf\",\r\n  },\r\n}));\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nfunction CardWrapper(props) {\r\n  return (\r\n    <Box my={15}>\r\n      <BrittanyCard {...props}>{props.children}</BrittanyCard>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction MenuDivider() {\r\n  return (\r\n    <Divider\r\n      flexItem\r\n      orientation=\"vertical\"\r\n      style={{ height: \"1rem\", alignSelf: \"center\" }}\r\n    />\r\n  );\r\n}\r\n\r\nconst sections = [\r\n  <CardWrapper index={1} maxWidth=\"sm\" title=\"About Me\">\r\n    <AboutMe />\r\n  </CardWrapper>,\r\n  <CardWrapper index={2} maxWidth=\"sm\" title=\"Resume\">\r\n    <Resume />\r\n  </CardWrapper>,\r\n  <CardWrapper index={3} title=\"Projects\">\r\n    <Projects />\r\n  </CardWrapper>,\r\n  <CardWrapper index={4} title=\"Experiences\">\r\n    <Experiences />\r\n  </CardWrapper>,\r\n  <CardWrapper index={5} title=\"Papers\">\r\n    <Papers />\r\n  </CardWrapper>,\r\n  <CardWrapper index={6} maxWidth=\"sm\" title=\"Contact\"></CardWrapper>,\r\n];\r\n\r\nexport default function App(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <HideOnScroll {...props}>\r\n        <AppBar color=\"inherit\">\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            >\r\n              <Avatar\r\n                alt=\"WookJae Jo\"\r\n                src={process.env.PUBLIC_URL + \"/favicon.ico\"}\r\n              />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}></Typography>\r\n            <Button className={classes.menuButton}>Welcome</Button>\r\n            <MenuDivider />\r\n            <Button className={classes.menuButton}>Services</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n      <CardWrapper index={0} maxWidth=\"sm\" title=\"About Me\">\r\n        <AboutMe />\r\n      </CardWrapper>\r\n      <CardWrapper index={1} maxWidth=\"sm\" title=\"Resume\">\r\n        <Resume />\r\n      </CardWrapper>\r\n      <CardWrapper index={2} title=\"Projects\">\r\n        <Projects />\r\n      </CardWrapper>\r\n      <CardWrapper index={3} title=\"Papers\">\r\n        <Papers />\r\n      </CardWrapper>\r\n      <CardWrapper index={4} title=\"Experiences\">\r\n        <Experiences />\r\n      </CardWrapper>\r\n      <CardWrapper index={5} maxWidth=\"sm\" title=\"Contact\">\r\n        <Contact />\r\n      </CardWrapper>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nlet isDark = true;\r\nconst DEFAULT_BGCOLOR_DARK = \"#1e1e21\";\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontSize: 12,\r\n    fontFamily: \"monaco, Consolas, Roboto, Helvetica, Arial, sans-serif\",\r\n  },\r\n  palette: {\r\n    type: isDark ? \"dark\" : null,\r\n    background : {\r\n      default : isDark ? DEFAULT_BGCOLOR_DARK : null,\r\n      paper: isDark ? DEFAULT_BGCOLOR_DARK : null\r\n    },\r\n    primary: {\r\n      main: \"#2979ff\"\r\n    },\r\n    secondary: {\r\n      main: \"#14a37f\"\r\n    }\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { theme } from \"./theme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MuiThemeProvider theme={theme}>\r\n      <App theme={theme} />\r\n    </MuiThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}